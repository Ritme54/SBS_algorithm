

#include <iostream>
#include <vector>

using namespace std;

//class Map
//{
//private:
//	vector<vector<int>> mapData;
//	int width;
//	int hight;
//	int startX;
//	int startY;
//	int endX;
//	int endY;
//
//
//
//
//public:
//	Map()
//	{
//		int width = 0;
//		int hight = 0;
//		int startX = 0;
//		int startY = 0;
//		int endX = 0;
//		int endY = 0;
//
//	}
//	void setMap(int w, int h, int sX, int sY, int eX, int eY)
//	{
//		width = w;
//		hight = h;
//		startX = sX;
//		startY = sY;
//		endX = eX;
//		endY = eY;
//		mapData.resize(hight, vector<int> (width,  0));
//	}
//
//};



int map()
{
	

	vector<vector<int>>grid =
	{


			{ 2, 1, 0, 0 },
			{ 0, 1, 0, 1 },
			{ 0, 0, 0, 0 },
			{ 1, 1, 1, 3 },
	};
	int start = 2;
	int end = 3;
	int startX = 0, startY = 0;
	int endX = 0, endY = 0;
	//방문 확인
	bool visited[4][4] = { false };



	for (int i = 0; i < grid.size(); i++)
	{	
		for (int j = 0; j < grid.size(); j++)
		{
				
							
			if (grid[i][j] == start)
			{
				startX = i;
				startY = j;
			}
			if (grid[i][j] == end)
			{
				endX = i;
				endY = j;
			}


		}


	}
	cout << "맵 정보" << endl;
	for (int i = 0; i < grid.size(); i++)
	{
		for (int j = 0; j < grid[i].size(); j++)
		{
			cout << grid[i][j] << " ";
		}
		cout << endl;
	}

	void going(int x,int y);
	{

		int x = startX;
		int y = startY;
		

	
		for (int i = 0; i < 4; i++)
		{
			cout << "현재 위치: (" << x << ", " << y << ")" << endl;
			if (i == 0) // Up
			{
				x--;
			}
			else if (i == 1) // Down
			{
				x++;
			}
			else if (i == 2) // Left
			{
				y--;
			}
			else if (i == 3) // Right
			{
				y++;

			}
			if (x < 0 || x >= grid.size() || y < 0 || y >= grid[0].size())//경계 밖
			{
				return -1; // 
			}
			else if (grid[x][y] == end)
			{
				cout << "목적지에 도착했습니다." << endl;
				return 0;
			}
			else if (grid[x][y] == 1)
			{
				cout << "벽에 막혔습니다." << endl;
				return -1;
			}
			





		};
	}
	return 0;
};


int main()
{

	map();


	return 0;


}
